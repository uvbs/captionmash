<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   width="{CommonConstants.CAPTION_CANVAS_WIDTH}"
				   height="{CommonConstants.CAPTION_CANVAS_HEIGHT}"
				   creationPolicy="all"
				   click="sendEvent(DESELECT);" borderStyle="inset"
				   creationComplete="init()" 
				   xmlns:Container="com.captionmashup.common.view.component.CaptionCanvas.Container.*"
				    cornerRadius="20">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.captionmashup.common.CommonConstants;
			import com.captionmashup.common.view.bubble.Bubble;
			import com.captionmashup.common.log.t;
			
			//import captionmashup.shell.facade.ApplicationFacade;
			public static const SELECT:String = 'select';
			public static const DESELECT:String = 'deselect';
			public static const CANVAS_CLICKED:String = "canvas_clicked";
			
			private function init():void{
				//imageContainer.addEventListener(ImageContainer.IMAGE_LOADED, showCaptions);
				addEventListener(MouseEvent.CLICK,deselect);
			}
			
			//Handle height change for long images
			//using the height property of bitmapData
			public function set imageData(bitmapData:BitmapData):void{
				bitmapContainer.imageData = bitmapData;
				scroller.visible = false;
				if(bitmapData == null) return;
				//bitmapContainer.maxImageHeight = bitmapData.height;
				
				if(bitmapData.height >= CommonConstants.CAPTION_CANVAS_HEIGHT_SCALE_LIMIT){	
					trace("BIG IMAGEEEE in CaptionCanvas");
					scroller.visible = true;
					bitmapContainer.height = bitmapData.height;
					captionContainer.height = bitmapData.height;
					captionContainer.validateNow();

				}else{
					scroller.visible = false;

					bitmapContainer.height = CommonConstants.CAPTION_CANVAS_HEIGHT;
					captionContainer.height = CommonConstants.CAPTION_CANVAS_HEIGHT;
				}
				
				t.obj(bitmapData,"bitmapData in CaptionCanvas");
				
				/*
				if(bitmapData.height >= CommonConstants.CAPTION_CANVAS_HEIGHT_SCALE_LIMIT){			
					this.captionContainer.height = bitmapData.height;
					this.bitmapContainer.height	= bitmapData.height;
				}else{
					this.captionContainer.height = CommonConstants.CAPTION_CANVAS_HEIGHT;
					this.bitmapContainer.height	= CommonConstants.CAPTION_CANVAS_HEIGHT;
				}*/
				
			}
			
			private function showCaptions(evt:Event):void{
				captionContainer.visible = true;
			}
			
			
			// Sends the named event
			private function sendEvent(eventName:String):void
			{
				dispatchEvent(new Event(eventName, true));
			}
			
			public function clearCaptions():void{
				captionContainer.clearCanvas();
			}
			
			
			private function deselect(evt:MouseEvent):void{
				trace("deselect in captionCanvas"+evt.target);
				if(evt.target is Bubble){
					return;
				}else{
					sendEvent(CANVAS_CLICKED);	
				}
			}
		]]>
	</fx:Script>
	<s:Group width="100%" height="100%">
		<s:Group id="container" width="100%" height="100%">

			<Container:BitmapContainer id="bitmapContainer">
			</Container:BitmapContainer>
			
			<Container:CaptionContainer id="captionContainer" 
										height="{CommonConstants.VERTICAL_SCROLL_DUCT_TAPE_HEIGHT}">
			</Container:CaptionContainer>	
		</s:Group>
		<s:VScrollBar id="scroller" 
					  viewport="{container}" 
					  height="{CommonConstants.CAPTION_CANVAS_HEIGHT}"
					  x="{CommonConstants.CAPTION_CANVAS_WIDTH-scroller.width}"
					  visible="false">
		</s:VScrollBar>
	</s:Group>	
</s:BorderContainer>
